#!/usr/bin/make -f
export DEB_BUILD_MAINT_OPTIONS = hardening=+all optimize=-lto
export DEB_LDFLAGS_MAINT_APPEND = -Wl, --as-needed

include /usr/share/dpkg/pkg-info.mk
include /usr/share/dpkg/architecture.mk

SHELL = /bin/bash
export HOME=$(shell mktemp -d)

ifeq ($(DEB_HOST_ARCH), amd64)
	_RUNTIME_ARCH = x64
endif
_RUNTIME_ID = $(shell . /etc/os-release; echo $${ID}.$${VERSION_ID})
_SDK_VERSION = $(DEB_VERSION_UPSTREAM)
_RUNTIME_VERSION = 6.0.4
_VERSION = $(shell echo $(_SDK_VERSION) | cut -d'.' -f1)

PREFIX = /usr
SYSCONFDIR = /etc
BINDIR = $(PREFIX)/bin
LIBDIR = $(PREFIX)/lib
DATADIR = $(PREFIX)/share
MANDIR = $(DATADIR)/man
DESTDIR = $(CURDIR)/debian/tmp
DOTNET_TOP = $(LIBDIR)/dotnet
dotnet_version = dotnet$(_VERSION)
dotnet_dirname = $(dotnet_version)-$(_SDK_VERSION)
DOTNETLIBDIR=$(DOTNET_TOP)/$(dotnet_dirname)
dotnet_etcdir=$(SYSCONFDIR)/dotnet


%:
	dh $@

override_dh_auto_build:

	pushd src/runtime.* \
		&& patch -p1 -i $(CURDIR)/debian/patches/68212-shlibdeps-warning-log2.patch \
	&& popd

	pushd src/command-line-api.* \
		&& patch -p1 -i $(CURDIR)/debian/patches/300command-line-api-use-work-tree-with-git-apply.patch \
	&& popd

	pushd src/vstest.* \
		&& patch -p1 -i $(CURDIR)/debian/patches/400vstest-use-work-tree-with-git-apply.patch \
	&& popd

	pushd src/fsharp.* \
		&& patch -p1 -i $(CURDIR)/debian/patches/500fsharp-use-work-tree-with-git-apply.patch \
	&& popd

	pushd src/xliff-tasks.* \
		&& patch -p1 -i $(CURDIR)/debian/patches/600xliff-tasks-use-work-tree-with-git-apply.patch \
	&& popd

	pushd src/sdk.* \
		&& patch -p1 -i $(CURDIR)/debian/patches/1500sdk-telemetry-optout.patch \
		&& patch -p1 -i $(CURDIR)/debian/patches/1501sdk-22373-portablerid.patch \
	&& popd

	pushd src/installer.* \
		&& patch -p1 -i $(CURDIR)/debian/patches/1600installer-12516-portablerid.patch \
	&& popd

	VERBOSE=1 ./build.sh \
    	-- \
    	/v:n \
    	/p:SkipPortableRuntimeBuild=true \
    	/p:LogVerbosity=n \
    	/p:MinimalConsoleLogOutput=false \
    	/p:ContinueOnPrebuiltBaselineError=true \

override_dh_install:

	sed -e 's|[@]LIBDIR[@]|$(DOTNETLIBDIR)|g' $(CURDIR)/debian/dotnet.sh.in > $(CURDIR)/debian/dotnet.sh
	install -dm 0755 $(DESTDIR)/$(DOTNETLIBDIR)
	ls artifacts/$(_RUNTIME_ARCH)/Release
	tar xf artifacts/$(_RUNTIME_ARCH)/Release/dotnet-sdk-$(_SDK_VERSION)-$(_RUNTIME_ID)-$(_RUNTIME_ARCH).tar.gz -C $(DESTDIR)/$(DOTNETLIBDIR)

	# See https://github.com/dotnet/source-build/issues/2579
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name 'testhost.x86' -delete
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name 'vstest.console' -delete


	# Fix executable permissions on files
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name 'apphost' -exec chmod +x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name 'singlefilehost' -exec chmod +x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name 'lib*so' -exec chmod +x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name 'apphost' -exec chmod +x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name 'singlefilehost' -exec chmod +x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name 'lib*so' -exec chmod +x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name '*.a' -exec chmod -x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name '*.dll' -exec chmod -x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name '*.h' -exec chmod 0644 {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name '*.json' -exec chmod -x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name '*.pdb' -exec chmod -x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name '*.props' -exec chmod -x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name '*.pubxml' -exec chmod -x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name '*.targets' -exec chmod -x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name '*.txt' -exec chmod -x {} \;
	find $(DESTDIR)/$(DOTNETLIBDIR) -type f -name '*.xml' -exec chmod -x {} \;

	install -dm 0755 $(DESTDIR)$(SYSCONFDIR)/profile.d/
	install $(CURDIR)/debian/dotnet.sh $(DESTDIR)$(SYSCONFDIR)/profile.d/

	install -dm 0755 $(DESTDIR)/$(BINDIR)

	install -dm 0755 $(DESTDIR)/$(MANDIR)/man1/
	install -dm 0755 $(DESTDIR)/$(DOTNETLIBDIR)/man/man1


	find -iname 'dotnet*.1' -type f -exec cp {} $(DESTDIR)/$(DOTNETLIBDIR)/man/man1/ \;
	gzip -9v -n $(DESTDIR)/$(DOTNETLIBDIR)/man/man1/*


	for f in $(DESTDIR)/$(DOTNETLIBDIR)/man/man1/*.1.gz; do \
       	f=$$(basename $$f); \
		echo " /usr/share/man/man1/$$f $$f $(DOTNETLIBDIR)/man/man1/$$f" >> debian/tmp/dependants;  \
	done

	install -dm 0755 $(DESTDIR)/$(SYSCONFDIR)/dotnet
	echo "$(DOTNETLIBDIR)" >> install_location
	install install_location $(DESTDIR)/$(DOTNETLIBDIR)
	echo "$(DOTNETLIBDIR)" >> install_location_$(_RUNTIME_ARCH)
	install install_location_$(_RUNTIME_ARCH) $(DESTDIR)/$(DOTNETLIBDIR)
	echo " /etc/dotnet/install_location install_location $(DOTNETLIBDIR)/install_location" >> debian/tmp/dependants
	echo " /etc/dotnet/install_location_$(_RUNTIME_ARCH) install_location_$(_RUNTIME_ARCH) $(DOTNETLIBDIR)/install_location_$(_RUNTIME_ARCH)" >> debian/tmp/dependants

	install -dm 0755 $(DESTDIR)/$(DOTNETLIBDIR)/source-built-artifacts
	install -m 0644 artifacts/$(_RUNTIME_ARCH)/Release/Private.SourceBuilt.Artifacts.*.tar.gz $(DESTDIR)/$(DOTNETLIBDIR)/source-built-artifacts/

	cat debian/tmp/dependants >> debian/dotnet-host.alternatives.in
	echo "Priority: 60104" >> debian/dotnet-host.alternatives.in


	for f in debian/*.in; do \
	  f2=$$(echo $$f | sed 's/\.in$$//'); \
	  sed -e 's,@DOTNET_TOP@,$(DOTNET_TOP),g' \
	      -e 's,@basedir@,$(DOTNETLIBDIR),g' \
	      -e 's,@dotnet_dirname@,$(dotnet_dirname),g' \
	      -e 's,@major@,$(_VERSION),g' \
    	  -e 's,@dotnet_version@,$(dotnet_version),g' \
	      -e 's,@rid@,$(_RUNTIME_ID),g' \
	      -e 's,@arch@,$(_RUNTIME_ARCH),g' \
	      -e 's,@etcdir@,$(dotnet_etcdir),g' \
	      -e 's,@multiarch@,$(DEB_HOST_MULTIARCH),g' \
	      -e 's,@hostarch@,$(DEB_HOST_ARCH),g' \
	      -e 's,@runtimearch@,$(_RUNTIME_ARCH),g' \
	    $$f > $$f2; \
	done


	dh_install

#override_dh_auto_test:

	#update-ca-certificates
	#VERBOSE=1 ./build.sh --run-smoke-test
	#$(CURDIR)/test/Microsoft.DotNet.SourceBuild.SmokeTests/assets/smoke-tests/smoke-test.sh --dotnetDir $(CURDIR)/test/Microsoft.DotNet.SourceBuild.SmokeTests/bin/Release/net6.0/.dotnet --projectOutput --archiveRestoredPackages --targetRid ubuntu.22.04-x64 --minimal --excludeOnlineTests --excludeOmniSharpTests


	#$(DESTDIR)/$(LIBDIR)/dotnet/dotnet --info
	#$(DESTDIR)/$(LIBDIR)/dotnet/dotnet --version