//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BingWebTest
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;


    public class WebTest1Coded : WebTest
    {

        public WebTest1Coded()
        {
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule1 = new ValidationRuleResponseTimeGoal();
                validationRule1.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }

            WebTestRequest request1 = new WebTestRequest("http://google.com/");
            request1.ExpectedResponseUrl = "https://www.google.co.in/?gfe_rd=cr&dcr=0&ei=U2auWcSrOYbj8wfahrugCg&gws_rd=ssl";
            ExtractHiddenFields extractionRule1 = new ExtractHiddenFields();
            extractionRule1.Required = true;
            extractionRule1.HtmlDecode = true;
            extractionRule1.ContextParameterName = "1";
            request1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            ExtractText extractionRule2 = new ExtractText();
            extractionRule2.StartsWith = "&atyp=";
            extractionRule2.EndsWith = "&";
            extractionRule2.Index = 0;
            extractionRule2.IgnoreCase = false;
            extractionRule2.UseRegularExpression = false;
            extractionRule2.HtmlDecode = true;
            extractionRule2.Required = false;
            extractionRule2.ContextParameterName = "QueryStringParam2414.atyp";
            request1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule2.Extract);
            ExtractText extractionRule3 = new ExtractText();
            extractionRule3.StartsWith = "?hl=";
            extractionRule3.EndsWith = "\"";
            extractionRule3.Index = 3;
            extractionRule3.IgnoreCase = false;
            extractionRule3.UseRegularExpression = false;
            extractionRule3.HtmlDecode = true;
            extractionRule3.Required = false;
            extractionRule3.ContextParameterName = "QueryStringParam2536.hl";
            request1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule3.Extract);
            ExtractText extractionRule4 = new ExtractText();
            extractionRule4.StartsWith = "?hl=";
            extractionRule4.EndsWith = "\"";
            extractionRule4.Index = 3;
            extractionRule4.IgnoreCase = false;
            extractionRule4.UseRegularExpression = false;
            extractionRule4.HtmlDecode = true;
            extractionRule4.Required = false;
            extractionRule4.ContextParameterName = "QueryStringParam2621.hl";
            request1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule4.Extract);
            ExtractText extractionRule5 = new ExtractText();
            extractionRule5.StartsWith = "?hl=";
            extractionRule5.EndsWith = "\"";
            extractionRule5.Index = 3;
            extractionRule5.IgnoreCase = false;
            extractionRule5.UseRegularExpression = false;
            extractionRule5.HtmlDecode = true;
            extractionRule5.Required = false;
            extractionRule5.ContextParameterName = "QueryStringParam2706.hl";
            request1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule5.Extract);
            yield return request1;
            request1 = null;
        }
    }
}
