#nullable enable
~Microsoft.AspNetCore.SignalR.Protocol.MessagePackHubProtocol.MessagePackHubProtocol(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions!>! options) -> void
Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions
Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions.MessagePackHubProtocolOptions() -> void
Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions.SerializerOptions.get -> MessagePack.MessagePackSerializerOptions!
Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions.SerializerOptions.set -> void
Microsoft.AspNetCore.SignalR.Protocol.MessagePackHubProtocol
Microsoft.AspNetCore.SignalR.Protocol.MessagePackHubProtocol.GetMessageBytes(Microsoft.AspNetCore.SignalR.Protocol.HubMessage! message) -> System.ReadOnlyMemory<byte>
Microsoft.AspNetCore.SignalR.Protocol.MessagePackHubProtocol.IsVersionSupported(int version) -> bool
Microsoft.AspNetCore.SignalR.Protocol.MessagePackHubProtocol.MessagePackHubProtocol() -> void
Microsoft.AspNetCore.SignalR.Protocol.MessagePackHubProtocol.Name.get -> string!
Microsoft.AspNetCore.SignalR.Protocol.MessagePackHubProtocol.TransferFormat.get -> Microsoft.AspNetCore.Connections.TransferFormat
Microsoft.AspNetCore.SignalR.Protocol.MessagePackHubProtocol.TryParseMessage(ref System.Buffers.ReadOnlySequence<byte> input, Microsoft.AspNetCore.SignalR.IInvocationBinder! binder, out Microsoft.AspNetCore.SignalR.Protocol.HubMessage? message) -> bool
Microsoft.AspNetCore.SignalR.Protocol.MessagePackHubProtocol.Version.get -> int
Microsoft.AspNetCore.SignalR.Protocol.MessagePackHubProtocol.WriteMessage(Microsoft.AspNetCore.SignalR.Protocol.HubMessage! message, System.Buffers.IBufferWriter<byte>! output) -> void
Microsoft.Extensions.DependencyInjection.MessagePackProtocolDependencyInjectionExtensions
static Microsoft.Extensions.DependencyInjection.MessagePackProtocolDependencyInjectionExtensions.AddMessagePackProtocol<TBuilder>(this TBuilder builder) -> TBuilder
static Microsoft.Extensions.DependencyInjection.MessagePackProtocolDependencyInjectionExtensions.AddMessagePackProtocol<TBuilder>(this TBuilder builder, System.Action<Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions!>! configure) -> TBuilder
