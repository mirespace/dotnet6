#nullable enable
abstract Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckService.CheckHealthAsync(System.Func<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration!, bool>? predicate, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthReport!>!
Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions
Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions
Microsoft.Extensions.DependencyInjection.HealthCheckServiceCollectionExtensions
Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder
Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder.Add(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration! registration) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder.Services.get -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckPublisherOptions
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckPublisherOptions.Delay.get -> System.TimeSpan
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckPublisherOptions.Delay.set -> void
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckPublisherOptions.HealthCheckPublisherOptions() -> void
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckPublisherOptions.Period.get -> System.TimeSpan
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckPublisherOptions.Period.set -> void
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckPublisherOptions.Predicate.get -> System.Func<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration!, bool>?
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckPublisherOptions.Predicate.set -> void
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckPublisherOptions.Timeout.get -> System.TimeSpan
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckPublisherOptions.Timeout.set -> void
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckService
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckService.CheckHealthAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthReport!>!
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckService.HealthCheckService() -> void
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckServiceOptions
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckServiceOptions.HealthCheckServiceOptions() -> void
Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckServiceOptions.Registrations.get -> System.Collections.Generic.ICollection<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration!>!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck! instance, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = null, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck! instance, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus, System.Collections.Generic.IEnumerable<string!>! tags) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddCheck<T>(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = null, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddCheck<T>(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus, System.Collections.Generic.IEnumerable<string!>! tags) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddTypeActivatedCheck<T>(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus, params object![]! args) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddTypeActivatedCheck<T>(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus, System.Collections.Generic.IEnumerable<string!>! tags, System.TimeSpan timeout, params object![]! args) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddTypeActivatedCheck<T>(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus, System.Collections.Generic.IEnumerable<string!>? tags, params object![]! args) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddTypeActivatedCheck<T>(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, params object![]! args) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddAsyncCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>!>! check, System.Collections.Generic.IEnumerable<string!>! tags) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddAsyncCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>!>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddAsyncCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>!>! check, System.Collections.Generic.IEnumerable<string!>! tags) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddAsyncCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>!>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>! check, System.Collections.Generic.IEnumerable<string!>! tags) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.CancellationToken, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.CancellationToken, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>! check, System.Collections.Generic.IEnumerable<string!>? tags) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthCheckServiceCollectionExtensions.AddHealthChecks(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
