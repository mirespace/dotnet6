#nullable enable
Microsoft.AspNetCore.Hosting.Server.Abstractions.IHostContextContainer<TContext>
Microsoft.AspNetCore.Hosting.Server.Abstractions.IHostContextContainer<TContext>.HostContext.get -> TContext?
Microsoft.AspNetCore.Hosting.Server.Abstractions.IHostContextContainer<TContext>.HostContext.set -> void
Microsoft.AspNetCore.Hosting.Server.Features.IServerAddressesFeature
Microsoft.AspNetCore.Hosting.Server.Features.IServerAddressesFeature.Addresses.get -> System.Collections.Generic.ICollection<string!>!
Microsoft.AspNetCore.Hosting.Server.Features.IServerAddressesFeature.PreferHostingUrls.get -> bool
Microsoft.AspNetCore.Hosting.Server.Features.IServerAddressesFeature.PreferHostingUrls.set -> void
Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>
Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>.CreateContext(Microsoft.AspNetCore.Http.Features.IFeatureCollection! contextFeatures) -> TContext
Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>.DisposeContext(TContext context, System.Exception? exception) -> void
Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>.ProcessRequestAsync(TContext context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Hosting.Server.IServer
Microsoft.AspNetCore.Hosting.Server.IServer.Features.get -> Microsoft.AspNetCore.Http.Features.IFeatureCollection!
Microsoft.AspNetCore.Hosting.Server.IServer.StartAsync<TContext>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>! application, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Hosting.Server.IServer.StopAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Hosting.Server.IServerIntegratedAuth
Microsoft.AspNetCore.Hosting.Server.IServerIntegratedAuth.AuthenticationScheme.get -> string!
Microsoft.AspNetCore.Hosting.Server.IServerIntegratedAuth.IsEnabled.get -> bool
Microsoft.AspNetCore.Hosting.Server.ServerIntegratedAuth
Microsoft.AspNetCore.Hosting.Server.ServerIntegratedAuth.AuthenticationScheme.get -> string!
Microsoft.AspNetCore.Hosting.Server.ServerIntegratedAuth.AuthenticationScheme.set -> void
Microsoft.AspNetCore.Hosting.Server.ServerIntegratedAuth.IsEnabled.get -> bool
Microsoft.AspNetCore.Hosting.Server.ServerIntegratedAuth.IsEnabled.set -> void
Microsoft.AspNetCore.Hosting.Server.ServerIntegratedAuth.ServerIntegratedAuth() -> void
